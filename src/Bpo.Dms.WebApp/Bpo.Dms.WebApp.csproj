<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>disable</Nullable>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<!--<SpaProxyServerUrl>http://localhost:8000</SpaProxyServerUrl>-->
		<!--<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>-->
		<ImplicitUsings>enable</ImplicitUsings>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Abp" Version="7.1.0" />
		<PackageReference Include="Devart.Data.MySql.EFCore" Version="8.21.2066" />
		<PackageReference Include="Devart.Data.MySql.EFCore.NetTopologySuite" Version="8.21.2066" />
		<PackageReference Include="Devart.Data.PostgreSql.EFCore" Version="7.24.2066" />
		<PackageReference Include="Devart.Data.PostgreSql.EFCore.NetTopologySuite" Version="7.24.2066" />
		<PackageReference Include="Devart.Data.SQLite.EFCore" Version="5.19.2066" />
		<PackageReference Include="Devart.Data.SQLite.EFCore.NetTopologySuite" Version="5.19.2066" />
		<PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="6.0.3" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="6.0.3" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="6.0.3" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.3" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="6.0.3" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="6.0.3" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="6.0.3" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite.NetTopologySuite" Version="6.0.3" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.3" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer.NetTopologySuite" Version="6.0.3" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.3">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.2" />
		<PackageReference Include="NetTopologySuite" Version="2.4.0" />
		<PackageReference Include="NetTopologySuite.Core" Version="1.15.3" />
		<PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="6.0.3" />
		<PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL.NetTopologySuite" Version="6.0.3" />
		<PackageReference Include="Pomelo.EntityFrameworkCore.MySql" Version="6.0.1" />
		<PackageReference Include="Pomelo.EntityFrameworkCore.MySql.NetTopologySuite" Version="6.0.1" />
		<PackageReference Include="Serilog.AspNetCore" Version="5.0.0" />
		<PackageReference Include="SixLabors.ImageSharp.Web" Version="1.0.5" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.3.0" />
		<PackageReference Include="Teradata.EntityFrameworkCore.NetTopologySuite" Version="3.1.0" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<Content Remove="$(SpaRoot)src\.umi*\**" />
		<Compile Remove="$(SpaRoot)src\.umi*\**" />
		<EmbeddedResource Remove="$(SpaRoot)src\.umi*\**" />
		<None Remove="$(SpaRoot)src\.umi*\**" />
	</ItemGroup>

	<!--Tạo file openapi.json khi build. Dùng để gen api client trong spa-->
	<Target Name="PostBuildGenerateOpenApiJson" AfterTargets="PostBuildEvent">
		<Exec Command="dotnet tool restore" />
		<Exec Command="dotnet swagger tofile --output ClientApp/config/openapi.json $(OutputPath)\$(AssemblyName).dll v1 " />
	</Target>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)\dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>
